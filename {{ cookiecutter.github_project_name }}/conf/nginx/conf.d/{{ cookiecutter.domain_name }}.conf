upstream {{ cookiecutter.github_project_name }}-upstream {
  ip_hash;
  server {{ cookiecutter.github_project_name }}-gunicorn-1:8000;
}


# REDIRECT FROM HTTP TO HTTPS
# ------------------------------------------------------------------------------
server {
    listen       80;
    server_name  {{ cookiecutter.domain_name }};

    location / {
        return 301 https://$host$request_uri;
    }
}

# {{ cookiecutter.domain_name }} HTTPS SITE
# ------------------------------------------------------------------------------
server {
    listen 443 ssl;
    server_name  {{ cookiecutter.domain_name }};

    ssl_certificate     /etc/nginx/ssl/{{ cookiecutter.domain_name }}_chained.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ cookiecutter.domain_name }}.key;
    # curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/options-ssl-nginx.conf > "options-ssl-nginx.conf"
    # curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot/ssl-dhparams.pem > "ssl-dhparams.pem"
    ssl_dhparam /etc/nginx/ssl/ssl-dhparams.pem;
    include /etc/nginx/ssl/options-ssl-nginx.conf;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_redirect     off;
    proxy_set_header   Host $http_host;
    proxy_set_header   X-Real-IP $http_x_real_ip;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_connect_timeout 300s;
    proxy_read_timeout 300s;

    ## Require IP or HTTP Basic Auth Authorization
    # satisfy  any;
    # allow 1.1.1.1/32;
    # deny   all;
    # auth_basic            "closed site";
    # auth_basic_user_file  /etc/nginx/conf.d/passwd;

    location ^~ /static/  {
        alias /static/;
    }

    location ^~ /media/  {
        alias /media/;
    }

    location / {
        proxy_pass http://{{ cookiecutter.github_project_name }}-upstream;
    }
}
